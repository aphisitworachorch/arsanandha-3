stages:
  - build
  - deploy

frontend-ap-docker-build:
  stage: build
  tags:
    - "frontend-ap"
  image: docker
  before_script:
    - chmod +x ./setup_env.sh
    - sh ./setup_env.sh
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/arsanandha.ap/ap-frontend/ap-frontend:latest .
    - docker push $CI_REGISTRY/arsanandha.ap/ap-frontend/ap-frontend:latest

frontend-ap-k8s-apply:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config set-cluster ${KUBE_CLUSTER_NAME} --server="${KUBE_SERVER}"
    - kubectl config set clusters.${KUBE_CLUSTER_NAME}.certificate-authority-data ${KUBE_CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials ${KUBE_USER} --token="${KUBE_TOKEN}"
    - kubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=${KUBE_USER}
    - kubectl config use-context default
    - kubectl config get-contexts
    - kubectl get namespace
    - kubectl apply -f $CI_PROJECT_DIR/frontend-deploy.yaml --namespace=default